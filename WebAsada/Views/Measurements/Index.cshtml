@model IEnumerable<WebAsada.ViewModels.MeasurementVM>



<partial name="_PageTitle" model="@("Lecturas")" />
<partial name="_CreateNewButton" />
@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.MeasurementId).Titled("Código");
        columns.Add(model => model.ReadDate).Titled("Fecha Lectura").Formatted("{0: dd/MM/yyyy}");
        columns.Add(model => model.PaymentPlace).Titled("Lugar de pago");
        columns.Add(model => model.MessageOfTheMonth).Titled("Mensaje del Mes");
        columns.Add(model => model.IsActive ? "Sí" : "No").Titled("Activo");
        columns.Add().Titled("Editar").Encoded(false).RenderedAs(o => Html.ActionLink("Editar", "Edit", new { id = o.Id }));
        columns.Add().Titled("Activar").Encoded(false).RenderedAs(o => Html.ActionLink("Activar", null,null, new { id = o.Id}, new { onclick = "ActivateMeasurement(" + o.Id + "," + o.IsActive.ToString().ToLower() + ");", href = "#"}));
        columns.Add().Titled("Recibos").Encoded(false).RenderedAs(o => Html.ActionLink("Recibos", "ReceiptByMeasurement", "Receipt", new { id = o.Id }));
    })
    .Empty("No se encontraron datos")
    .Filterable()
    .Sortable()
)

@section Scripts {
 <script>
   @if (TempData["javascriptMessage"] != null)
    {
        @Html.Raw(TempData["javascriptMessage"])
    }       

     function ActivateMeasurement(measurementId, isActive) {
         if (isActive) {
             showInformationMessage("Esta Lectura ya se encuentra activa");
         }
         else {
             executeWhitConfirmation("/Measurements/Activate", "question", "Desea Activar la lectura actual? Después de esta acción no se podran modificar la información de la lectura", {
                 id: measurementId
             },
             function () {
                location.reload();
             });
         }
     }    
  </script>
} 